How did viewing a diff between two versions of a file help you see the bug that was introduced?

It just focussed on where the differences occurred and allowed a straightforward comparison between old and new files.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Help learn from mistakes or recover old pieces of code that were deleted

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: Only commit when you have have reach a particular decision point or functionality level. Makes for logical commits, compared to Google Docs.

Cons: It's up to the individual user to decide when to commit. The reasoning used to make this decision may vary, resulting in hard to track changes.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Using multiple files in coding is a common way of managing content, allowing logical divisions of code when developing. Git allows for this and helps manage changes across files, while Google Docs just treats each document as a separate and unrelated entity.

How can you use the commands git log and git diff to view the history of files?

git log lists the history of the changes, along with the commit ids, while git diff allows you to review the actual differences between successive commits

How might using version control make you more confident to make changes that could break something?

Provides confidence that you can roll back to a previously working commit.